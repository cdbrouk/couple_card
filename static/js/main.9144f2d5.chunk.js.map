{"version":3,"sources":["Image/mingbbu.jpg","hoc/Menu/MenuButton.js","hoc/Menu/Menu.js","Component/Intro/Intro.js","Component/Pages/Pages.js","hoc/Page/Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuButton","props","_this","this","react_default","a","createElement","className","text","onMouseDown","_renderPage","index","icon","Icon","name","Component","Menu","menues","_renderMenues","map","menu","hoc_Menu_MenuButton","key","DDayCal","arr","split","strtDay","Date","today","date","month","getMonth","day","getDate","year","getFullYear","_getToday","parseInt","Intro","src","require","alt","Pages","href","target","style","fontSize","color","Page","_rederPage","num","Component_Intro_Intro","Component_Pages_Pages","page","App","state","pageNum","setState","hoc_Menu_Menu","hoc_Page_Page","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9144f2d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mingbbu.49f42d12.jpg\";","import React, {Component} from 'react';\nimport './MenuButton.css';\nimport {Icon} from 'semantic-ui-react';\n\nconst ButtonIcon = (props) => <Icon name={props} />\n\nclass MenuButton extends Component{\n    render(){\n        return (\n            <div className = {this.props.text} onMouseDown={()=>this.props._renderPage(this.props.index)}>\n                {ButtonIcon(this.props.icon)}\n                <br />                \n                <span className = \"MenuText\">{this.props.text}</span>\n            </div>\n        );\n    }\n}\n\nexport default MenuButton;","import React, {Component} from 'react';\nimport MenuButton from './MenuButton';\nimport './Menu.css';\n\nclass Menu extends Component{\n    menues = [\n        {\n            icon : \"info\",\n            text : \"Intro\"\n        },\n        {\n            icon : \"hand point up outline\",\n            text : \"Pages\"\n        }\n    ]\n\n    _renderMenues = () => {\n        const menues = this.menues.map((menu, index) => {\n                return <MenuButton     \n                    index = {index}                \n                    icon = {menu.icon}\n                    text = {menu.text}\n                    _renderPage = {this.props._renderPage}\n                    key = {index}\n                />                \n            })\n        return menues;\n    }\n\n    render(){\n        return(\n            <div className = \"Menubar\">\n                {this._renderMenues()}\n            </div>\n        );\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport './Intro.css';\n\nfunction _getToday(){\n    const date = new Date();\n    const month = date.getMonth()+1;\n    const day = date.getDate();\n    const year = date.getFullYear();\n    const today = new Date(year,month,day);\n    return today;\n}\n\nfunction DDayCal(){\n    const strtDate = \"2016-06-19\"\n    const arr = strtDate.split('-');\n    const strtDay = new Date(arr[0],arr[1],arr[2]);\n    const today = _getToday();\n    const Diff = today-strtDay;\n    const curDay = 24*60*60*1000;\n    const DDay = parseInt(Diff/curDay);\n    return DDay+1;\n}\n\nclass Intro extends Component{\n    render(){\n        return(\n            <div className = \"Intro__Box\">\n                <div className = \"Intro__ImageBox\">\n                    <img \n                        className=\"Intro__Image\" \n                        src={require('../../Image/mingbbu.jpg')} \n                        alt='IntroImage'\n                    />                    \n                </div>\n                <div className = \"Intro__IntroBox\">\n                    <div className= \"Intro__Title\">\n                        MINGBBU COUPLE\n                    </div>\n                    <div className= \"Intro__Contents\">\n                        SONG MINJUNG & CHOI HYUNGWUK\n                    </div>\n                    <div className= \"Intro__Contents\">\n                        2016. 06. 19~ \n                    </div>\n                    <div className= \"Intro__Contents\">\n                        {DDayCal()}일째\n                    </div>                    \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Intro;","import React, {Component} from 'react';\nimport {Icon} from 'semantic-ui-react';\nimport './Pages.css';\n\nconst YoutubeIcon = () => <Icon className=\"icons youtube\" name=\"youtube\" \n    style={{fontSize:\"40px\", color:\"#ff9c9c\"}} />\n\nconst BlogIcon = () => <Icon className=\"icons blog\" name=\"list\" \n    style={{fontSize:\"40px\", color:\"#ff9c9c\"}} />\n\nconst GitIcon = () => <Icon className=\"icons Git\" name=\"github\" \n    style={{fontSize:\"40px\", color:\"#ff9c9c\"}} />    \n\nclass Pages extends Component{\n    render(){\n        return(\n            <div className = \"Pages__Box\">\n                <div className = \"Pages__IconBox\">\n                    <div className= \"Pages__Contents\">\n                        <a href = \"https://www.youtube.com/channel/UCKMmGAZmrN8_m-mlvWY-ubQ\" target=\"_blank\">\n                            {YoutubeIcon()} \n                        </a>\n                    </div>\n                    <br />\n                    <div className= \"Pages__Contents\">\n                        <a href = \"https://blog.naver.com/shb04187\" target=\"_blank\">\n                            {BlogIcon()} \n                        </a>\n                    </div> \n                    <br />  \n                    <div className= \"Pages__Contents\">\n                        <a href = \"https://github.com/cdbrouk\" target=\"_blank\">\n                            {GitIcon()} \n                        </a>\n                    </div>   \n                </div>\n                <div className = \"Pages__IntroBox\">\n                    <div className= \"Pages__Contents\">\n                        MINJUNG`S YOUTUBE\n                    </div>\n                    <br />\n                    <br />\n                    <div className= \"Pages__Contents\">\n                        MINJUNG`S BLOG\n                    </div>\n                    <br />\n                    <br />\n                    <div className= \"Pages__Contents\">\n                        HYUNGWUK`S GIT\n                    </div>                    \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Pages;","import React, {Component} from 'react';\nimport Intro from '../../Component/Intro/Intro';\nimport Pages from '../../Component/Pages/Pages';\n\nclass Page extends Component{\n    _rederPage = num => {\n        switch (num){\n            case 0:\n                return <Intro />;\n            case 1:\n                return <Pages />;\n            default:\n                return <Intro />;\n        }\n\n    }\n\n    render(){\n        return(\n            <div>\n                {this._rederPage(this.props.page)}\n            </div>\n        );\n    }\n}\n\nexport default Page;","import React, {Component} from 'react';\nimport Menu from './hoc/Menu/Menu'\nimport Page from './hoc/Page/Page'\n\nclass App extends Component{\n  state ={\n    pageNum : 0\n  };\n\n  _renderPage = (num) => {\n    this.setState({pageNum:num});\n  }\n\n  render(){\n    return (\n      <div>\n        <Menu _renderPage={this._renderPage}/>\n        <Page page={this.state.pageNum} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}